<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>어디서 뭐하지</title>
  <link href="./css/midmapc.css" rel="stylesheet">
</head>

<body>
  <div id="map" class="map_div"></div>
  <div class="btn1">
    <button class="button1" onclick="location.href='place'">
      뭐하지
    </button>
  </div>
  <%
    var nm=na;
    var add=adr;
    var i;
    for(i=0;i<10;i++){
      if(!nm)break;
      
    }
  %>
  <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=1c08979aea618b39c818445498c12937"></script>
  <script>
    var i=0;
    var num=<%=i%>;
    var name=<%=nm%>;
    var address=<%=add%>;
    var adrar=address.split(",");
    var personName= name.split(",");
    var middle = new Array(2);
    //계산할 좌표들을 전 단계에서 전달받아야 함. 무슨 변수로 전달할지 결정 필요
    var testLa = new Array();
    var testLo = new Array();

    // 주소-좌표 변환 객체를 생성합니다
    var geocoder = new kakao.maps.services.Geocoder();
    
    middle[0]=0;middle[1]=0;
    // 주소로 좌표를 검색합니다
    while(adrar[i]){
      geocoder.addressSearch(adrar[i],function(result,status){
        middle[0]=middle[0]+result[0].y;
        middle[1]=middle[1]+result[0].x;
        var coords=new kakao.maps.LatLng(result[0].y,result[0].x);
        var marker=new kakao.maps.Marker({
          map:map,
          position:coords
        });
      });
      i++;
    }
    geocoder.addressSearch('제주특별자치도 제주시 첨단로 242', function(result, status) {
        // 정상적으로 검색이 완료됐으면 
        if (status === kakao.maps.services.Status.OK) {

            var coords = new kakao.maps.LatLng(result[0].y, result[0].x);

            // 결과값으로 받은 위치를 마커로 표시합니다
            var marker = new kakao.maps.Marker({
              map: map,
          position: coords
    });

    middle[0] = 0;
    middle[1] = 0;
    testLa[0] = 37.462835;
    testLo[0] = 126.908194;
    testLa[1] = 37.500144;
    testLo[1] = 127.005329;
    testLa[2] = 37.592527;
    testLo[2] = 127.016944;


    function initMap() {

      computeMiddle();

      var mapContainer = document.getElementById('map'), // 지도를 표시할 div
        mapOption = {
          center: new kakao.maps.LatLng(middle[0], middle[1]), // 지도의 중심좌표
          level: 6 // 지도의 확대 레벨
        };

      var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

      // 마커를 표시할 위치와 title 객체 배열입니다
      var positions = [{
          title: '중간지점',
          latlng: new kakao.maps.LatLng(middle[0], middle[1])
        },
        {
          title: '박지수',
          latlng: new kakao.maps.LatLng(testLa[0], testLo[0])
        },
        {
          title: '문경환',
          latlng: new kakao.maps.LatLng(testLa[1], testLo[1])
        },
        {
          title: '지정환',
          latlng: new kakao.maps.LatLng(testLa[2], testLo[2])
        }
      ];

      // 마커 이미지의 이미지 주소입니다
      var imageSrc = "http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png";

      // 마커 이미지의 이미지 크기 입니다
      var imageSize = new kakao.maps.Size(35, 50);

      // 마커 이미지를 생성합니다
      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);
      image: markerImage // 마커 이미지

      var marker_mid = new kakao.maps.Marker({
        map: map, // 마커를 표시할 지도
        position: positions[0].latlng, // 마커를 표시할 위치
        title: positions[0].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
        image: markerImage // 마커 이미지
      });
      for (var i = 1; i < positions.length; i++) { // 참석자들 마커
        // 마커를 생성합니다
        var marker = new kakao.maps.Marker({
          map: map, // 마커를 표시할 지도
          position: positions[i].latlng, // 마커를 표시할 위치
          title: positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
        });
      }

      // 지도에 표시할 원을 생성합니다
      var circle = new kakao.maps.Circle({
        center: new kakao.maps.LatLng(middle[0], middle[1]), // 원의 중심좌표 입니다
        radius: 1000, // 미터 단위의 원의 반지름입니다
        strokeWeight: 2, // 선의 두께입니다
        strokeColor: 'rgb(255, 55, 100)', // 선의 색깔입니다
        strokeOpacity: 0.5, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다
        strokeStyle: 'solid', // 선의 스타일 입니다
        fillColor: 'rgb(255, 55, 100)', // 채우기 색깔입니다
        fillOpacity: 0.2 // 채우기 불투명도 입니다
      });

      // 지도에 원을 표시합니다
      circle.setMap(map);
    }

    function computeMiddle() {
      /*middle[0]=37.566481622437934;
      middle[1]=126.98502302169841;*/
      var i;
      for (i = 0; i < 3; i++) {
        middle[0] += testLa[i];
      }
      middle[0] /= 3;
      for (i = 0; i < 3; i++) {
        middle[1] += testLo[i];
      }
      middle[1] /= 3;
    }
    initMap();
  </script>

</body>

</html>

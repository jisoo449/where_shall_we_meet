<!DOCTYPE html>
<html lang="en">

<head>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <title>어디서 뭐하지</title>

  <link href="./css/infoc.css" rel="stylesheet">

</head>

<body>
  <div class="img-wrapper">
    <div class="img-overlay">
      <form id="inputInfo" action="/info" method="post" enctype="application/x-www-form-urlencoded">
        <div class="meeting_info">
          <label for="meeting">모임 이름:</label>
          <input class="meeting" type="text" name='meeting' id="meeting" required="" autofocus />
          <label for="date">날짜:</label>
          <input class="date" type="date" name="date" id="date" required="" />
        </div>
        <hr />
        <div class="attendent-info">
          <table class="table" id="attendent_table" align="center">
            <thead>
              <th class="tname">이름</th>
              <th class="taddr">주소</th>
              <tr>
                <td><input type='text' name='name' placeholder='이름' class='sname' required=""/></td>
                <td><input type='text' name='address' id='address1' value='' class='saddr' required=""/></td>
                <td><input type='button' id="btn1" class='search1' value='검색'></td>
              </tr>
              <tr>
                <td><input type='text' name='name' placeholder='이름' class='sname' required=""/></td>
                <td><input type='text' name='address' id='address2' value='' class='saddr' required=""/></td>
                <td><input type='button' id="btn2" class='search2' value='검색'></td>
              </tr>
            </thead>
            <tbody id="attendent"></tbody>
          </table>
        </div>

        <!-- jQuery와 Postcodify를 로딩한다 -->
        <script src="//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
        <script src="//d1p7wdleee1q2z.cloudfront.net/post/search.min.js"></script>
        <script src="https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
        <script>
          var count = 2;

          function person_Add() {
            if (count < 9) {
              count += 1;

              var temp = 'search'.concat(count);
              var t = 'address'.concat(count);
              var btn = 'btn'.concat(count);

              var attendent = document.getElementById('attendent');
              var row = attendent.insertRow(attendent.rows.length);

              var cell1 = row.insertCell(0);
              var cell2 = row.insertCell(1);
              var cell3 = row.insertCell(2);

              cell1.innerHTML = "<input type='text' name='name' placeholder='이름' class='sname'/>";
              cell2.innerHTML = "<input type='text' name='address' id='address' value='' class='saddr'/>";
              cell3.innerHTML = '<input type="button" id="btn" class="search" value="검색"/>';

              //아래의 코드를 통해서 클래스명과 id명을 바꿔줌
              document.getElementById('btn').className = temp;
              document.getElementById('btn').id = btn;
              document.getElementById('address').id = t;

            }
          }

          function person_Remove() {
            if (count > 2) {
              var attendent = document.getElementById('attendent');
              if (attendent.rows.length < 1) return;
              attendent.deleteRow(attendent.rows.length - 1);
              count -= 1;
            }
          }
        </script>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js" ;></script>
        <script>
          $('.table').on('click', '.search1', function() {
            new daum.Postcode({
              oncomplete: function(data) {
                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var addr = ''; // 주소 변수

                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                  addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                  addr = data.jibunAddress;
                }

                document.getElementById('address1').value = addr;
              }
            }).open();
          })

          $('.table').on('click', '.search2', function() {
            new daum.Postcode({
              oncomplete: function(data) {
                var addr = ''; // 주소 변수
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                  addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                  addr = data.jibunAddress;
                }

                document.getElementById('address2').value = addr;
              }
            }).open();
          })

          $('.table').on('click', '.search3', function() {
            new daum.Postcode({
              oncomplete: function(data) {
                var addr = ''; // 주소 변수
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                  addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                  addr = data.jibunAddress;
                }

                document.getElementById('address3').value = addr;
              }
            }).open();
          })

          $('.table').on('click', '.search4', function() {
            new daum.Postcode({
              oncomplete: function(data) {
                var addr = ''; // 주소 변수
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                  addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                  addr = data.jibunAddress;
                }

                document.getElementById('address4').value = addr;
              }
            }).open();
          })

          $('.table').on('click', '.search5', function() {
            new daum.Postcode({
              oncomplete: function(data) {
                var addr = ''; // 주소 변수

                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                  addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                  addr = data.jibunAddress;
                }

                document.getElementById('address5').value = addr;
              }
            }).open();
          })

          $('.table').on('click', '.search6', function() {
            new daum.Postcode({
              oncomplete: function(data) {
                var addr = ''; // 주소 변수

                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                  addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                  addr = data.jibunAddress;
                }

                document.getElementById('address6').value = addr;
              }
            }).open();
          })

          $('.table').on('click', '.search7', function() {
            new daum.Postcode({
              oncomplete: function(data) {
                var addr = ''; // 주소 변수
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                  addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                  addr = data.jibunAddress;
                }
                document.getElementById('address7').value = addr;
              }
            }).open();
          })

          $('.table').on('click', '.search8', function() {
            new daum.Postcode({
              oncomplete: function(data) {
                var addr = ''; // 주소 변수

                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                  addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                  addr = data.jibunAddress;
                }

                document.getElementById('address8').value = addr;
              }
            }).open();
          })

          $('.table').on('click', '.search9', function() {
            new daum.Postcode({
              oncomplete: function(data) {
                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var addr = ''; // 주소 변수

                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                  addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                  addr = data.jibunAddress;
                }

                document.getElementById('address9').value = addr;
              }
            }).open();
          })

        </script>
        <div class="modify">
          <button class="btn-person_add" type="button" id="person_add" onclick="person_Add()">
            <img src='./img/add.png'/>
          </button>
          <button class="btn-person_remove" type="button" id="person_remove" onclick="person_Remove()">
            <img src='./img/remove.png'/>
          </button>
        </div>
        <div onclick="location.href='mid'">
          <input type="submit" class="btn" value="어디서?"/>
        </div>
      </form>
    </div>
  </div>

</body>

</html>
